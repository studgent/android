//apply plugin: 'android'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'cobertura'
apply plugin: 'coveralls'


repositories {
  mavenCentral()
  maven { url 'http://download.crashlytics.com/maven' }
}

buildscript {
  repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
  }

  dependencies {
    //classpath 'com.android.tools.build:gradle:0.8+'
    classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' // cobertura plugin
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:0.2.5' // coveralls plugin
  }
}

dependencies {
    compile 'com.google.android:android:4.1.1.4'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.jakewharton:notificationcompat2:1.1.2'
    //compile 'com.android.support:support-v4:13.0.+'
    //compile 'com.android.support:appcompat-v7:18.0.+'
    //compile 'com.google.android.gms:play-services:3.1.+'
    compile 'com.crashlytics.android:crashlytics:1.+'
    //compile project(':mixare')

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-all:1.9.5'
}



tasks.withType(Compile) {
    options.encoding = "UTF-8"
}



cobertura.coverageFormats = ['html', 'xml']

/*android {
  compileSdkVersion 19
  buildToolsVersion '19.0.0'
  
  sourceSets {
    main {
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      renderscript.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }

    instrumentTest.setRoot('tests')
    instrumentTest {
      java.srcDirs = ['tests/src']
      res.srcDirs = ['tests/res']
      assets.srcDirs = ['tests/assets']
      resources.srcDirs = ['tests/src']
    }
  }
    
  dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')    
  }
}*/